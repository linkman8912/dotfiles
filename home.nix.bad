{ config, pkgs, ... }:

{
	# Home Manager needs a bit of information about you and the paths it should
	# manage.
  	home.username = "linkman";
  	home.homeDirectory = "/home/linkman";

  	# This value determines the Home Manager release that your configuration is
  	# compatible with. This helps avoid breakage when a new Home Manager release
  	# introduces backwards incompatible changes.
  	#
  	# You should not change this value, even if you update Home Manager. If you do
  	# want to update the value, then make sure to first check the Home Manager
  	# release notes.
  	home.stateVersion = "24.05"; # Please read the comment before changing.

  	# The home.packages option allows you to install Nix packages into your
  	# environment.
  	home.packages = [
  	# # Adds the 'hello' command to your environment. It prints a friendly
	# # "Hello, world!" when run.
    		pkgs.hello

    	# # It is sometimes useful to fine-tune packages, for example, by applying
    	# # overrides. You can do that directly here, just don't forget the
    	# # parentheses. Maybe you want to install Nerd Fonts with a limited number of
    	# # fonts?
    	# (pkgs.nerdfonts.override { fonts = [ "FantasqueSansMono" ]; })
	
    	# # You can also create simple shell scripts directly inside your
    	# # configuration. For example, this adds a command 'my-hello' to your
    	# # environment:
    	# (pkgs.writeShellScriptBin "my-hello" ''
    	#   echo "Hello, ${config.home.username}!"
    	# '')
  	];

  	# Home Manager is pretty good at managing dotfiles. The primary way to manage
  	# plain files is through 'home.file'.
  	home.file = {
  		# # Building this configuration will create a copy of 'dotfiles/screenrc' in
    		# # the Nix store. Activating the configuration will then make '~/.screenrc' a
    		# # symlink to the Nix store copy.
    		# ".screenrc".source = dotfiles/screenrc;

    		# # You can also set the file content immediately.
    		# ".gradle/gradle.properties".text = ''
    		#   org.gradle.console=verbose
    		#   org.gradle.daemon.idletimeout=3600000
    		# '';
  	};

  	# Home Manager can also manage your environment variables through
  	# 'home.sessionVariables'. These will be explicitly sourced when using a
  	# shell provided by Home Manager. If you don't want to manage your shell
  	# through Home Manager then you have to manually source 'hm-session-vars.sh'
  	# located at either
  	#
  	#  ~/.nix-profile/etc/profile.d/hm-session-vars.sh
  	#
  	# or
  	#
  	#  ~/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh
  	#
  	# or
  	#
  	#  /etc/profiles/per-user/linkman/etc/profile.d/hm-session-vars.sh
  	#
  	home.sessionVariables = {
    		# EDITOR = "emacs";
  	};
	programs = {
		bash = {
			enable = true;
			shellAliases = {
				ls = "ls -A";
				".." = "cd ..";
			};
		};

		neovim = {
			enable = true;
			vimAlias = true;
			defaultEditor = true;
		};

		git = {
			enable = true;
			userName  = "linkman";
			userEmail = "linkman8912@proton.me";
		};
	};

	wayland.windowManager.hyprland = {
		enable = true;
		settings = ''
      # This is an example Hyprland config file.
      # Refer to the wiki for more information.
      # https://wiki.hyprland.org/Configuring/Configuring-Hyprland/

      # Please note not all available settings / options are set here.
      # For a full list, see the wiki

      # You can split this configuration into multiple files
      # Create your files separately and then link them to this file like this:
      # source = ~/.config/hypr/myColors.conf

      ################
      ### MONITORS ###
      ################

      # See https://wiki.hyprland.org/Configuring/Monitors/
      monitor=,preferred,auto,1
      monitor=DVI-I-1,1920x1080@60,0x0,1
      monitor=HDMI-A-2,1920x1080@60,auto,1

      ###################
      ### MY PROGRAMS ###
      ###################

      # See https://wiki.hyprland.org/Configuring/Keywords/

      # Set programs that you use
      $terminal = kitty
      $fileManager = dolphin
      $menu = wofi --show drun

      #################
      ### AUTOSTART ###
      #################

      # Autostart necessary processes (like notifications daemons, status bars, etc.)
      # Or execute your favorite apps at launch like this:

      # exec-once = $terminal
      # exec-once = nm-applet &
      exec-once = waybar & hyprpaper & firefox
      exec-once = nmcli device wifi connect ***REMOVED*** password ***REMOVED***!

      #############################
      ### ENVIRONMENT VARIABLES ###
      #############################

      # See https://wiki.hyprland.org/Configuring/Environment-variables/
      env = XCURSOR_SIZE,24
      env = HYPRCURSOR_SIZE,24

      #####################
      ### LOOK AND FEEL ###
      #####################

      # Refer to https://wiki.hyprland.org/Configuring/Variables/
      general { 
          gaps_in = 5
          gaps_out = 15
          border_size = 2
          col.active_border = 0x3D91F2
          col.inactive_border = 0x303030
          rounding = 6
      }

      ####################
      ### ANIMATIONS ###
      ####################
      animations {
          enabled = true
          speed = 7
      }

      ####################
      ### LAYOUTS ###
      ####################
      layout {
          apply = master
          workspaces = dwindle
      }

      ##############################
      ### BINDINGS ###
      ##############################
      # Keybindings
      bind = $mainMod, left, movefocus, l
      bind = $mainMod, right, movefocus, r
      bind = $mainMod, up, movefocus, u
      bind = $mainMod, down, movefocus, d

      # Switch workspaces with mainMod + [0-9]
      bind = $mainMod, 1, workspace, 1
      bind = $mainMod, 2, workspace, 2
      bind = $mainMod, 3, workspace, 3
      bind = $mainMod, 4, workspace, 4
      bind = $mainMod, 5, workspace, 5
      bind = $mainMod, 6, workspace, 6
      bind = $mainMod, 7, workspace, 7
      bind = $mainMod, 8, workspace, 8
      bind = $mainMod, 9, workspace, 9
      bind = $mainMod, 0, workspace, 10

      # Move active window to a workspace with mainMod + SHIFT + [0-9]
      bind = $mainMod SHIFT, 1, movetoworkspace, 1
      bind = $mainMod SHIFT, 2, movetoworkspace, 2
      bind = $mainMod SHIFT, 3, movetoworkspace, 3
      bind = $mainMod SHIFT, 4, movetoworkspace, 4
      bind = $mainMod SHIFT, 5, movetoworkspace, 5
      bind = $mainMod SHIFT, 6, movetoworkspace, 6
      bind = $mainMod SHIFT, 7, movetoworkspace, 7
      bind = $mainMod SHIFT, 8, movetoworkspace, 8
      bind = $mainMod SHIFT, 9, movetoworkspace, 9
      bind = $mainMod SHIFT, 0, movetoworkspace, 10

      # Example special workspace (scratchpad)
      bind = $mainMod, S, togglespecialworkspace, magic
      bind = $mainMod SHIFT, S, movetoworkspace, special:magic

      # Scroll through existing workspaces with mainMod + scroll
      bind = $mainMod, mouse_down, workspace, e+1
      bind = $mainMod, mouse_up, workspace, e-1

      # Move/resize windows with mainMod + LMB/RMB and dragging
      bindm = $mainMod, mouse:272, movewindow
      bindm = $mainMod, mouse:273, resizewindow

      ##############################
      ### WINDOWS AND WORKSPACES ###
      ##############################

      # See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
      # See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

      # Example windowrule v1
      # windowrule = float, ^(kitty)$

      # Example windowrule v2
      # windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

      windowrulev2 = suppressevent maximize, class:.*;
	};
	# programs.bash = {
	#	enable = true;
	#	shellAliases = {
	#		ls = "ls -A";
	#		".." = "cd ..";

	#	};
	# };

	# programs.neovim = {
	#	enable = true;
	#	vimAlias = true;
	#	defaultEditor = true;
	# };
	
	# programs.git = {
	#	enable = true;
	#	userName = "Sam";
	#	userEmail = "linkman8912@proton.me";
	# };



	# Let Home Manager install and manage itself.
	programs.home-manager.enable = true;
	'';
}
